{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenidos * a mi workspace web! \u00b6 Al recorrido de mi experiencia en el posgrado, Especializaci\u00f3n en Fabricacio\u0301n Digital e Innovacio\u0301n . UTEC & FAB LAB BARCELONA Mi motivaci\u00f3n principal en este posgrado, es expandir mis l\u00edneas de inter\u00e9s enmarcadas en la formaci\u00f3n e investigaci\u00f3n en dise\u00f1o, a partir de la investigaci\u00f3n-acci\u00f3n y pr\u00e1cticas de intercambio interdisciplinarias, con \u00e9nfasis en el campo de la innovaci\u00f3n, desarrollo del dise\u00f1o en la cultura material, y el desarrollo conceptual de herramientas pr\u00e1cticas proyectuales. Me interesa involucrarme en el campo de estudio de la fabricaci\u00f3n digital tecnol\u00f3gica con \u00e9nfasis en la innovaci\u00f3n y sostenibilidad, ya que en t\u00e9rminos generales tiene estrecha relevancia con la \u201cproducci\u00f3n humana\u201d. Actualmente en la era virtual de los nuevos lenguajes digitales, combinar nuevas formas de tecnolog\u00eda inform\u00e1tica aplicadas al \u00e1mbito profesional y la docencia, incide inevitablemente en el hacer creativo desafiando la investigaci\u00f3n activa. Dar cabida a esta dimensi\u00f3n actual del \u201chacer\u201d integrando al \u201csaber\u201d, la innovaci\u00f3n digital sustentable ampliando mis capacidades y alcances de aprendizaje proyectual.","title":"Home"},{"location":"#bienvenidos-a-mi-workspace-web","text":"Al recorrido de mi experiencia en el posgrado, Especializaci\u00f3n en Fabricacio\u0301n Digital e Innovacio\u0301n . UTEC & FAB LAB BARCELONA Mi motivaci\u00f3n principal en este posgrado, es expandir mis l\u00edneas de inter\u00e9s enmarcadas en la formaci\u00f3n e investigaci\u00f3n en dise\u00f1o, a partir de la investigaci\u00f3n-acci\u00f3n y pr\u00e1cticas de intercambio interdisciplinarias, con \u00e9nfasis en el campo de la innovaci\u00f3n, desarrollo del dise\u00f1o en la cultura material, y el desarrollo conceptual de herramientas pr\u00e1cticas proyectuales. Me interesa involucrarme en el campo de estudio de la fabricaci\u00f3n digital tecnol\u00f3gica con \u00e9nfasis en la innovaci\u00f3n y sostenibilidad, ya que en t\u00e9rminos generales tiene estrecha relevancia con la \u201cproducci\u00f3n humana\u201d. Actualmente en la era virtual de los nuevos lenguajes digitales, combinar nuevas formas de tecnolog\u00eda inform\u00e1tica aplicadas al \u00e1mbito profesional y la docencia, incide inevitablemente en el hacer creativo desafiando la investigaci\u00f3n activa. Dar cabida a esta dimensi\u00f3n actual del \u201chacer\u201d integrando al \u201csaber\u201d, la innovaci\u00f3n digital sustentable ampliando mis capacidades y alcances de aprendizaje proyectual.","title":"Bienvenidos * a mi workspace web!"},{"location":"about/me/","text":"ABOUT ME * \u00b6 Hola, hola hola hola hola, mi nombre es ANDRE\u2026 Hola, hola hola hola hola, mi nombre es ANDRE\u2026 Hola, hola hola hola hola, mi nombre es ANDRE\u2026 Hola, hola hola hola hola, mi nombre es ANDRE\u2026 Hola, hola hola hola hola, mi nombre es ANDRE\u2026 Hola, hola hola hola hola, mi nombre es ANDRE\u2026 Hola, hola hola hola hola, mi nombre es ANDRE\u2026 Hola, hola hola hola hola, mi nombre es ANDRE\u2026 M Y\u2002W E B\u2002S I T E","title":"About"},{"location":"about/me/#about-me","text":"Hola, hola hola hola hola, mi nombre es ANDRE\u2026 Hola, hola hola hola hola, mi nombre es ANDRE\u2026 Hola, hola hola hola hola, mi nombre es ANDRE\u2026 Hola, hola hola hola hola, mi nombre es ANDRE\u2026 Hola, hola hola hola hola, mi nombre es ANDRE\u2026 Hola, hola hola hola hola, mi nombre es ANDRE\u2026 Hola, hola hola hola hola, mi nombre es ANDRE\u2026 Hola, hola hola hola hola, mi nombre es ANDRE\u2026 M Y\u2002W E B\u2002S I T E","title":"ABOUT ME *"},{"location":"diseno/md01/","text":"MD01 \u00b6 Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.","title":"MD01"},{"location":"diseno/md01/#md01","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.","title":"MD01"},{"location":"innovacion/mi01/","text":"MI01 \u00b6 Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.","title":"MI01"},{"location":"innovacion/mi01/#mi01","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.","title":"MI01"},{"location":"proyecto/proyecto/","text":"Ideas Iniciales \u00b6 Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.","title":"Ideas Iniciales"},{"location":"proyecto/proyecto/#ideas-iniciales","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.","title":"Ideas Iniciales"},{"location":"ref/web/","text":"laskdjlkasjdsa laskdjasljd Modulo \u00b6","title":"web"},{"location":"ref/web/#modulo","text":"","title":"Modulo"},{"location":"tecnicos/mt01/","text":"MT 01 \u00b6 HERRAMIENTAS DIGITALES . INTRODUCCI\u00d3N \u00b6 TECNOLOG\u00cdA Y FABRICACI\u00d3N MARCO TE\u00d3RICO/PR\u00c1CTICO . MT01 \u00b6 MT01 HERRAMIENTAS DIGITALES \u00b6 Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. HERRAMIENTAS DIGITALES APLICADAS . MT01 \u00b6 La pr\u00e1ctica del MT01, requiere tener instaladas las siguientes herramientas t\u00e9cnicas digitales, (macOS en mi caso). Ver secci\u00f3n Instalaci\u00f3n & Seteo. GIT HUB (CUENTA) : Github.com GitHub es el servicio remoto o la plataforma web que alojar\u00e1 en la nube los repositorios Git , siendo Git la herramienta o sistema de control de versiones local que usa GitHub ; (GitHub depende del sistema de control de versiones de Git para su funcionamiento). Se deben sincronizar GitHub con Git para trabajar en el flujo de contenido creado, cambios del proyecto a desarrollar. (Opcional. Con GitHub Desktop , puedes realizar comandos de Git , en una interfaz gr\u00e1fica de usuario, en lugar de mediante la l\u00ednea de comandos). GitHub Download Desktop / + info Oficial GitHub Desktop GIT : Git Download (macOS) . Git es una herramienta de control de versiones local (SCV), distribuido y de c\u00f3digo abierto, que permite a los desarrolladores rastrear cambios en el c\u00f3digo. VISUAL STUDIO CODE (VSC) : editor de texto web Visual Studio Code download (macOS) (o la alternativa Open Source Software Binaries of VSCode , VSCodium) ). (La instalaci\u00f3n de esta app es r\u00e1pida, intuitiva y autom\u00e1tica). __ PYTHON/PIP : Python 3 es el lenguaje de programaci\u00f3n de m\u00faltiple estilo y de c\u00f3digo abierto. PIP, (Package Installer for Python), es el gestor de paquetes est\u00e1ndar de Python , una herramienta que permite instalar, administrar, actualizar y desinstalar bibliotecas (o paquetes) de Python . + info Oficial Python tutorial MARKDOWN (MD) : Una vez instalada la app VSC , debemos instalar/vincular desde dentro de la misma, el plugin de Markdown . MD , es un lenguaje de c\u00f3digo de texto sin formato que permite convertir, formatear y estructurar la escritura, asignando cualidades a trav\u00e9s de una sintaxis sencilla y legible, sin necesidad de un editor especializado de procesamiento de texto m\u00e1s complejas. + info Markdown tutorial + info Markdown sintaxis MKDOCS : Su utilidad es construir la estructura visual del sitio. MkDocs es una herramienta que toma los archivos Markdown y los convierte en un sitio web est\u00e1tico, permite tener una vista previa local de la documentaci\u00f3n. MkDocs es la Librer\u00eda de Python , as\u00ed que primero debes asegurarte de tener instalados en tu sistema Python y su administrador de paquetes (PIP). + info Mkdocs install HERRAMIENTAS DIGITALES / SET & INSTALL . MT01 \u00b6 1. CREAR CUENTA EN GITHUB \u00b6 Debemos generar una cuenta en GitHub , la plataforma web que alojar\u00e1 (como Hosting) de forma remota los repositorios Git , la herramienta de control de versiones local en nuestra PC. 2. INSTALAR GIT \u00b6 Instalar Git para macOs lo haremos a trav\u00e9s de Homebrew como un package manager. Nota: Pegar la linea de comando en macOS Terminal: bin/bash -c \" $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh ) \" Al pegar la l\u00ednea de comando dar \u201cENTER\u201d e ingresar el Password personal de la PC/MAC y dar \u201cENTER\u201d y la instalaci\u00f3n empieza a correr durante unos \u2018minutos\u2019 (el tipeo del password es de modo invisible). + info Command Line Tutorial 3. SETEAR GIT \u00b6 Una vez instalado GIT, debo sincronizar/configurar GitHub con Git para trabajar en el proyecto a desarrollar. Paso 3.1 Abrir la terminal y all\u00ed configurar mi usuario GitHub + email, ejecutando los siguientes comandos (dejar que corra en la terminal la acci\u00f3n de seteo): git config \u2013global user.name \u201candrealorieto\u201d git config \u2013global user-email \u201ctatulor@gmail.com\u201d Paso 3.2 Verificar la correcta configuraci\u00f3n (del username + email), y ejecutamos en la terminal l\u00ednea de comando: git config \u2013global \u2013list 4. GENERAR UN SSH KEY \u00b6 Una clave SSH permite establecer una conexi\u00f3n segura entre la GIT (PC local) y GitHub. Importante! Si utilizo otra PC debo crear otra SSH. Para realizar la autenticaci\u00f3n de conexi\u00f3n segura entre GIT-PC y GitHub (\u201cGit Authentication secure Key\u201d) debemos seguir los siguientes pasos: Paso 4.1 \u2002 Verificar si ya tenemos una SSH KEY . Abrir la terminal y ejecutar l\u00ednea de comando: cat ~/.ssh/id_rsa.pub Notas: - Asegurarnos que en el final de la cadena SSHkey figure el email seteado previamente al sincronizar Git con GitHub. - Otro camino para ubicar manualmente en la PC la SSHkey generada es: abrir la carpeta de inicio en el Finder, hacer clic en Ver > Mostrar contenido de la carpeta > Ocultar (Comando + May\u00fas + Punto) y navegar hasta la carpeta .ssh . con ruta: (Users/andre/.ssh/) . - MacOS oculta por defecto ciertas carpetas como la .ssh , entonces para visualizar contenido oculto: abrir el Finder, navegar hasta la ubicaci\u00f3n deseada y presionar la combinaci\u00f3n de teclas: Comando (\u2318) + May\u00fasculas (\u21e7) + Punto (.) y se abrir\u00e1 la carpeta .ssh en una nueva ventana del Finder, donde podr\u00e9 ver mis archivos de clave (como id_rsa y id_rsa.pub ). Paso 4.2 \u2002 Generar mi PUBLIC SSH KEY . Puedo omitir este paso de generar mi public key ssh-keygen, si en el paso anterior de verificaci\u00f3n, en la terminal aparece desplegada una cadena larga que comienza por ssh-rsa. Abrir la terminal y ejecutar l\u00ednea de comando: ssh-keygen -t rsa -C \u201ctatulor@gmail.com\u201d Paso 4.3 \u2002 Copiar la PUBLIC SSH KEY en mi cuenta GITHUB . Para completar la \u201cGit Authentication secure Key\u201d entre GIT-PC y GitHub. + info About SSHkey Copiar la SSHKey de la terminal o a trav\u00e9s de la ruta de carpetas .shh/id_rsa.pub Copiar la SSHKey desde la terminal: ejecutando l\u00ednea de comando (para macOS): pbcopy < ~/.ssh/id_rsa.pub \u00f3 Pegar la SSH key en GitHub ingresando en: Profile personal account > Settings > SSH and GPG Keys > New SSHkey > (PEGAR SSH Key agregando un t\u00edtulo para identificarla) > Add SSH Key . 5. FORK TEMPLATE: EFDI-TEMPLATE \u00b6 Crear un Fork siguiendo la gu\u00eda de pasos. Una vez creado el Fork tendremos listo para editar nuestro repositorio remoto del efdi-template (Forked from fablabbcn/mdef-template). Un Fork (bifurcaci\u00f3n) es una copia de un repositorio original \u201cascendente\u201d . El fork de un repositorio es un nuevo repositorio que comparte el c\u00f3digo y la configuraci\u00f3n de visibilidad con el repositorio pre-existente. Permite experimentar cambios libremente sin afectar el proyecto original. + info About Fork Paso 5.1 - Ingresar a: Efdi Template > GitHub Repo efdi-template Paso 5.2 Dentro de GitHub Repo efdi-template ingresar a: Code > Create a new fork . Paso 5.3 Dentro de GitHub Repo efdi-template y la nueva ventana Create a new fork > (VERIFICAR) en \u201cOwner\u201d NOMBRE/PERFIL DE MI CUENTA GITHUB y en \u201cRepository name\u201d MI NOMBRE-APELLIDO > Check en \"Copy the main branch only\u201d > Create fork . De forma opcional podemos agregar una descripcion que identifique nuestro repositorio futuro. 6. CREAR UN REPOSITORIO LOCAL EN LA PC (CLONE) \u00b6 Crear o clonar el repositorio remoto (o proyecto) para crear un repositorio local en PC. Un Repositorio remoto clonado desde GitHub nos permite trabajar desde la PC local. Necesitamos clonarlo desde GitHub hacia la PC local/carpeta \u201clocal-repo\u201d (que alojar\u00e1 el repositorio clonado) a trav\u00e9s de la cual importamos el Repositorio/Proyecto para su edici\u00f3n local en el editor de texto web Visual Studio Code. Paso 6.1 \u2002 Crear una carpeta \u201cRepo Local\u201d en PC. Para mayor practicidad, crear/ubicar la carpeta con una ruta corta de acceso, (ej: Escritorio).Mi ruta de carpeta \u201cRepo Local\u201d = C:\\Users\\andre\\Desktop\\GITHUB_REPOLOCAL_ANDREA-LORIETO Paso 6.2 \u2002 Abrir la carpeta en PC . Dos opciones: 1) abrir desde la carpeta creada, abrir la terminal (bot\u00f3n derecho abrir terminal), y la terminal quedar\u00e1 abierta desde esa ubicaci\u00f3n/ruta de apertura de la carpeta, o 2) abrir desde la terminal, ir a la carpeta creada ingresando los siguientes comandos: \u201ccd\u201d + el nombre de carpeta o ruta consecutiva hasta llegar a la carpeta final de destino. (Antes de ingresar la carpeta/ruta a buscar atender la ubicaci\u00f3n/ruta actual de la cual partiremos la b\u00fasqueda que muestra la terminal Ej: \u201c~\u201d (\"C/Users/andre\u201d) . Ejecutar el siguiente comando: cd Desktop cd GITHUB_REPOLOCAL_ANDREA-LORIETO Paso 6.3 \u2002 Clonar el Repositorio remoto GitHub en PC a partir de la copia de la SSH key extra\u00edda de GitHub (copy/paste en terminal). - Abrir la terminal con la ruta acceso habilitada a la carpeta destino \u201cRepo Local\u201d C:\\Users\\andre\\Desktop\\GITHUB_REPOLOCAL_ANDREA-LORIETO y ejecutar el siguiente comando: git clone \u201cSSH Key \" es decir git clone git@github.com:miusuariocuentagithub/miproyecto.git Nota : Al ejecutar \u201center\u201d, Git se vincular\u00e1 con GitHub y generar\u00e1 el Clone en nuestra PC del Repositorio remoto (Forkeado anteriormente), quedando sincronizados para el flujo de trabajo continuo entre Repositorio remoto y PC local. 7. ACTIVAR LINK DE MI WEBSITE EN GITHUB \u00b6 Ingresar a nuestra (cuenta de GitHub) Repositorio remoto (fork) del efdi-template , ingresar en: Settings > Pages > ( en \u201cBuild & deployment ) Branch /gh-pages/root > Save. 8. SINCRONIZAR VISUAL STUDIO CODE CON GITHUB \u00b6 Debo Conectar VS con mi repositorio remoto de GitHub. Paso 8.1 En nuestra cuenta de GitHub Repositorio remoto (fork del efdi-template), copiar la URL de mi repositorio y pegarla en Visual Studio, ingresar en: Men\u00fa Code > Code > Local > HTTPS > Copy URL Paso 8.2 En Visual Studio ingresar a: Source control > Remote > Add Remote > ( PEGAR URL para sincronizar Visual Studio con GitHub ) Paso 8.3 En Visual Studio abrir nuestra carpeta \u201cGITHUB_REPOLOCAL_ANDREA-LORIETO\u201d donde tengo los archivos de la p\u00e1gina web e importarlo a VS de esta forma queda integrada la carpeta GitHub. Una vez heho esto simplemente daremos \u201cOPEN FOLDER\u201d al iniciar la edici\u00f3n de nuestro proyecto. Ingresar en: File > Add Folder to Workspace > ( e IMPORTAR la carpeta al Workspace del VS ) . 9. EDICI\u00d3N EN VISUAL STUDIO / Workflow - mkdocs \u00b6 Una vez clonado el repositorio GitHub remoto en mi repositorio local y sincronizado con Visual Studio ya podemos editar el c\u00f3digo en Visual Studio y subir los cambios de edici\u00f3n que realic\u00e9 en en mi p\u00e1gina web directamente desde VS. Paso 9.1 Una vez hecho esto simplemente daremos \u201cOPEN FOLDER\u201d al iniciar la edici\u00f3n de nuestro proyecto y visualizaremos el contenido \u201c\u00e1rbol de carpetas\u201d que configuran la estructura del Efdi-template . Paso 9.2 En cada edici\u00f3n del desarrollo de cambios de nuestro proyecto debemos realizar la siguiente secuencia en VS: EDITAR cambio > SALVAR cambio > STAGE cambio + > NOMBRAR cambio > COMMIT ( confirma el cambio ) > SYNC CHANGES ( Sincroniza con nube GitHub = \"Push\" ) . Paso 9.3 Dentro del repositorio remoto GitHub en el men\u00fa ACTIONS > ALL WORKFLOWS podremos verificar el proceso del desarrollo de edici\u00f3n del Proyecto en cuanto la ejecuci\u00f3n de cambios. LINKS DE INTER\u00c9S . MT01 \u00b6 Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. REFLEXIONES . MT01 \u00b6 Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ENTREGA . MT01","title":"MT01"},{"location":"tecnicos/mt01/#mt-01","text":"","title":"MT 01"},{"location":"tecnicos/mt01/#herramientas-digitales-introduccion","text":"TECNOLOG\u00cdA Y FABRICACI\u00d3N","title":"HERRAMIENTAS DIGITALES . INTRODUCCI\u00d3N"},{"location":"tecnicos/mt01/#marco-teoricopractico-mt01","text":"","title":"MARCO TE\u00d3RICO/PR\u00c1CTICO . MT01"},{"location":"tecnicos/mt01/#mt01-herramientas-digitales","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.","title":"MT01 HERRAMIENTAS DIGITALES"},{"location":"tecnicos/mt01/#herramientas-digitales-aplicadas-mt01","text":"La pr\u00e1ctica del MT01, requiere tener instaladas las siguientes herramientas t\u00e9cnicas digitales, (macOS en mi caso). Ver secci\u00f3n Instalaci\u00f3n & Seteo. GIT HUB (CUENTA) : Github.com GitHub es el servicio remoto o la plataforma web que alojar\u00e1 en la nube los repositorios Git , siendo Git la herramienta o sistema de control de versiones local que usa GitHub ; (GitHub depende del sistema de control de versiones de Git para su funcionamiento). Se deben sincronizar GitHub con Git para trabajar en el flujo de contenido creado, cambios del proyecto a desarrollar. (Opcional. Con GitHub Desktop , puedes realizar comandos de Git , en una interfaz gr\u00e1fica de usuario, en lugar de mediante la l\u00ednea de comandos). GitHub Download Desktop / + info Oficial GitHub Desktop GIT : Git Download (macOS) . Git es una herramienta de control de versiones local (SCV), distribuido y de c\u00f3digo abierto, que permite a los desarrolladores rastrear cambios en el c\u00f3digo. VISUAL STUDIO CODE (VSC) : editor de texto web Visual Studio Code download (macOS) (o la alternativa Open Source Software Binaries of VSCode , VSCodium) ). (La instalaci\u00f3n de esta app es r\u00e1pida, intuitiva y autom\u00e1tica). __ PYTHON/PIP : Python 3 es el lenguaje de programaci\u00f3n de m\u00faltiple estilo y de c\u00f3digo abierto. PIP, (Package Installer for Python), es el gestor de paquetes est\u00e1ndar de Python , una herramienta que permite instalar, administrar, actualizar y desinstalar bibliotecas (o paquetes) de Python . + info Oficial Python tutorial MARKDOWN (MD) : Una vez instalada la app VSC , debemos instalar/vincular desde dentro de la misma, el plugin de Markdown . MD , es un lenguaje de c\u00f3digo de texto sin formato que permite convertir, formatear y estructurar la escritura, asignando cualidades a trav\u00e9s de una sintaxis sencilla y legible, sin necesidad de un editor especializado de procesamiento de texto m\u00e1s complejas. + info Markdown tutorial + info Markdown sintaxis MKDOCS : Su utilidad es construir la estructura visual del sitio. MkDocs es una herramienta que toma los archivos Markdown y los convierte en un sitio web est\u00e1tico, permite tener una vista previa local de la documentaci\u00f3n. MkDocs es la Librer\u00eda de Python , as\u00ed que primero debes asegurarte de tener instalados en tu sistema Python y su administrador de paquetes (PIP). + info Mkdocs install","title":"HERRAMIENTAS DIGITALES APLICADAS . MT01"},{"location":"tecnicos/mt01/#herramientas-digitales-set-install-mt01","text":"","title":"HERRAMIENTAS DIGITALES / SET &amp; INSTALL . MT01"},{"location":"tecnicos/mt01/#1-crear-cuenta-en-github","text":"Debemos generar una cuenta en GitHub , la plataforma web que alojar\u00e1 (como Hosting) de forma remota los repositorios Git , la herramienta de control de versiones local en nuestra PC.","title":"1. CREAR CUENTA EN GITHUB"},{"location":"tecnicos/mt01/#2-instalar-git","text":"Instalar Git para macOs lo haremos a trav\u00e9s de Homebrew como un package manager. Nota: Pegar la linea de comando en macOS Terminal: bin/bash -c \" $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh ) \" Al pegar la l\u00ednea de comando dar \u201cENTER\u201d e ingresar el Password personal de la PC/MAC y dar \u201cENTER\u201d y la instalaci\u00f3n empieza a correr durante unos \u2018minutos\u2019 (el tipeo del password es de modo invisible). + info Command Line Tutorial","title":"2. INSTALAR GIT"},{"location":"tecnicos/mt01/#3-setear-git","text":"Una vez instalado GIT, debo sincronizar/configurar GitHub con Git para trabajar en el proyecto a desarrollar. Paso 3.1 Abrir la terminal y all\u00ed configurar mi usuario GitHub + email, ejecutando los siguientes comandos (dejar que corra en la terminal la acci\u00f3n de seteo): git config \u2013global user.name \u201candrealorieto\u201d git config \u2013global user-email \u201ctatulor@gmail.com\u201d Paso 3.2 Verificar la correcta configuraci\u00f3n (del username + email), y ejecutamos en la terminal l\u00ednea de comando: git config \u2013global \u2013list","title":"3. SETEAR GIT"},{"location":"tecnicos/mt01/#4-generar-un-ssh-key","text":"Una clave SSH permite establecer una conexi\u00f3n segura entre la GIT (PC local) y GitHub. Importante! Si utilizo otra PC debo crear otra SSH. Para realizar la autenticaci\u00f3n de conexi\u00f3n segura entre GIT-PC y GitHub (\u201cGit Authentication secure Key\u201d) debemos seguir los siguientes pasos: Paso 4.1 \u2002 Verificar si ya tenemos una SSH KEY . Abrir la terminal y ejecutar l\u00ednea de comando: cat ~/.ssh/id_rsa.pub Notas: - Asegurarnos que en el final de la cadena SSHkey figure el email seteado previamente al sincronizar Git con GitHub. - Otro camino para ubicar manualmente en la PC la SSHkey generada es: abrir la carpeta de inicio en el Finder, hacer clic en Ver > Mostrar contenido de la carpeta > Ocultar (Comando + May\u00fas + Punto) y navegar hasta la carpeta .ssh . con ruta: (Users/andre/.ssh/) . - MacOS oculta por defecto ciertas carpetas como la .ssh , entonces para visualizar contenido oculto: abrir el Finder, navegar hasta la ubicaci\u00f3n deseada y presionar la combinaci\u00f3n de teclas: Comando (\u2318) + May\u00fasculas (\u21e7) + Punto (.) y se abrir\u00e1 la carpeta .ssh en una nueva ventana del Finder, donde podr\u00e9 ver mis archivos de clave (como id_rsa y id_rsa.pub ). Paso 4.2 \u2002 Generar mi PUBLIC SSH KEY . Puedo omitir este paso de generar mi public key ssh-keygen, si en el paso anterior de verificaci\u00f3n, en la terminal aparece desplegada una cadena larga que comienza por ssh-rsa. Abrir la terminal y ejecutar l\u00ednea de comando: ssh-keygen -t rsa -C \u201ctatulor@gmail.com\u201d Paso 4.3 \u2002 Copiar la PUBLIC SSH KEY en mi cuenta GITHUB . Para completar la \u201cGit Authentication secure Key\u201d entre GIT-PC y GitHub. + info About SSHkey Copiar la SSHKey de la terminal o a trav\u00e9s de la ruta de carpetas .shh/id_rsa.pub Copiar la SSHKey desde la terminal: ejecutando l\u00ednea de comando (para macOS): pbcopy < ~/.ssh/id_rsa.pub \u00f3 Pegar la SSH key en GitHub ingresando en: Profile personal account > Settings > SSH and GPG Keys > New SSHkey > (PEGAR SSH Key agregando un t\u00edtulo para identificarla) > Add SSH Key .","title":"4. GENERAR UN SSH KEY"},{"location":"tecnicos/mt01/#5-fork-template-efdi-template","text":"Crear un Fork siguiendo la gu\u00eda de pasos. Una vez creado el Fork tendremos listo para editar nuestro repositorio remoto del efdi-template (Forked from fablabbcn/mdef-template). Un Fork (bifurcaci\u00f3n) es una copia de un repositorio original \u201cascendente\u201d . El fork de un repositorio es un nuevo repositorio que comparte el c\u00f3digo y la configuraci\u00f3n de visibilidad con el repositorio pre-existente. Permite experimentar cambios libremente sin afectar el proyecto original. + info About Fork Paso 5.1 - Ingresar a: Efdi Template > GitHub Repo efdi-template Paso 5.2 Dentro de GitHub Repo efdi-template ingresar a: Code > Create a new fork . Paso 5.3 Dentro de GitHub Repo efdi-template y la nueva ventana Create a new fork > (VERIFICAR) en \u201cOwner\u201d NOMBRE/PERFIL DE MI CUENTA GITHUB y en \u201cRepository name\u201d MI NOMBRE-APELLIDO > Check en \"Copy the main branch only\u201d > Create fork . De forma opcional podemos agregar una descripcion que identifique nuestro repositorio futuro.","title":"5. FORK TEMPLATE: EFDI-TEMPLATE"},{"location":"tecnicos/mt01/#6-crear-un-repositorio-local-en-la-pc-clone","text":"Crear o clonar el repositorio remoto (o proyecto) para crear un repositorio local en PC. Un Repositorio remoto clonado desde GitHub nos permite trabajar desde la PC local. Necesitamos clonarlo desde GitHub hacia la PC local/carpeta \u201clocal-repo\u201d (que alojar\u00e1 el repositorio clonado) a trav\u00e9s de la cual importamos el Repositorio/Proyecto para su edici\u00f3n local en el editor de texto web Visual Studio Code. Paso 6.1 \u2002 Crear una carpeta \u201cRepo Local\u201d en PC. Para mayor practicidad, crear/ubicar la carpeta con una ruta corta de acceso, (ej: Escritorio).Mi ruta de carpeta \u201cRepo Local\u201d = C:\\Users\\andre\\Desktop\\GITHUB_REPOLOCAL_ANDREA-LORIETO Paso 6.2 \u2002 Abrir la carpeta en PC . Dos opciones: 1) abrir desde la carpeta creada, abrir la terminal (bot\u00f3n derecho abrir terminal), y la terminal quedar\u00e1 abierta desde esa ubicaci\u00f3n/ruta de apertura de la carpeta, o 2) abrir desde la terminal, ir a la carpeta creada ingresando los siguientes comandos: \u201ccd\u201d + el nombre de carpeta o ruta consecutiva hasta llegar a la carpeta final de destino. (Antes de ingresar la carpeta/ruta a buscar atender la ubicaci\u00f3n/ruta actual de la cual partiremos la b\u00fasqueda que muestra la terminal Ej: \u201c~\u201d (\"C/Users/andre\u201d) . Ejecutar el siguiente comando: cd Desktop cd GITHUB_REPOLOCAL_ANDREA-LORIETO Paso 6.3 \u2002 Clonar el Repositorio remoto GitHub en PC a partir de la copia de la SSH key extra\u00edda de GitHub (copy/paste en terminal). - Abrir la terminal con la ruta acceso habilitada a la carpeta destino \u201cRepo Local\u201d C:\\Users\\andre\\Desktop\\GITHUB_REPOLOCAL_ANDREA-LORIETO y ejecutar el siguiente comando: git clone \u201cSSH Key \" es decir git clone git@github.com:miusuariocuentagithub/miproyecto.git Nota : Al ejecutar \u201center\u201d, Git se vincular\u00e1 con GitHub y generar\u00e1 el Clone en nuestra PC del Repositorio remoto (Forkeado anteriormente), quedando sincronizados para el flujo de trabajo continuo entre Repositorio remoto y PC local.","title":"6. CREAR UN REPOSITORIO LOCAL EN LA PC (CLONE)"},{"location":"tecnicos/mt01/#7-activar-link-de-mi-website-en-github","text":"Ingresar a nuestra (cuenta de GitHub) Repositorio remoto (fork) del efdi-template , ingresar en: Settings > Pages > ( en \u201cBuild & deployment ) Branch /gh-pages/root > Save.","title":"7. ACTIVAR LINK DE MI WEBSITE EN GITHUB"},{"location":"tecnicos/mt01/#8-sincronizar-visual-studio-code-con-github","text":"Debo Conectar VS con mi repositorio remoto de GitHub. Paso 8.1 En nuestra cuenta de GitHub Repositorio remoto (fork del efdi-template), copiar la URL de mi repositorio y pegarla en Visual Studio, ingresar en: Men\u00fa Code > Code > Local > HTTPS > Copy URL Paso 8.2 En Visual Studio ingresar a: Source control > Remote > Add Remote > ( PEGAR URL para sincronizar Visual Studio con GitHub ) Paso 8.3 En Visual Studio abrir nuestra carpeta \u201cGITHUB_REPOLOCAL_ANDREA-LORIETO\u201d donde tengo los archivos de la p\u00e1gina web e importarlo a VS de esta forma queda integrada la carpeta GitHub. Una vez heho esto simplemente daremos \u201cOPEN FOLDER\u201d al iniciar la edici\u00f3n de nuestro proyecto. Ingresar en: File > Add Folder to Workspace > ( e IMPORTAR la carpeta al Workspace del VS ) .","title":"8. SINCRONIZAR VISUAL STUDIO CODE CON GITHUB"},{"location":"tecnicos/mt01/#9-edicion-en-visual-studio-workflow-mkdocs","text":"Una vez clonado el repositorio GitHub remoto en mi repositorio local y sincronizado con Visual Studio ya podemos editar el c\u00f3digo en Visual Studio y subir los cambios de edici\u00f3n que realic\u00e9 en en mi p\u00e1gina web directamente desde VS. Paso 9.1 Una vez hecho esto simplemente daremos \u201cOPEN FOLDER\u201d al iniciar la edici\u00f3n de nuestro proyecto y visualizaremos el contenido \u201c\u00e1rbol de carpetas\u201d que configuran la estructura del Efdi-template . Paso 9.2 En cada edici\u00f3n del desarrollo de cambios de nuestro proyecto debemos realizar la siguiente secuencia en VS: EDITAR cambio > SALVAR cambio > STAGE cambio + > NOMBRAR cambio > COMMIT ( confirma el cambio ) > SYNC CHANGES ( Sincroniza con nube GitHub = \"Push\" ) . Paso 9.3 Dentro del repositorio remoto GitHub en el men\u00fa ACTIONS > ALL WORKFLOWS podremos verificar el proceso del desarrollo de edici\u00f3n del Proyecto en cuanto la ejecuci\u00f3n de cambios.","title":"9. EDICI\u00d3N EN VISUAL STUDIO / Workflow - mkdocs"},{"location":"tecnicos/mt01/#links-de-interes-mt01","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.","title":"LINKS DE INTER\u00c9S . MT01"},{"location":"tecnicos/mt01/#reflexiones-mt01","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ENTREGA . MT01","title":"REFLEXIONES . MT01"},{"location":"tecnicos/mt02/","text":"MT02 \u00b6 Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.","title":"MT02"},{"location":"tecnicos/mt02/#mt02","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.","title":"MT02"}]}